
---
  tasks:
    - name: 'security_issues'
      classname: 'CVEcheckerTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CVEcheckerTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'github_details'
      classname: 'GithubTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'PackagePostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GithubTask_v0'
      ## only 1 task per 5 seconds
      #throttle:
      #   seconds: 5
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'static_analysis'
      classname: 'CsmockTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CsmockTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'crypto_algorithms'
      classname: 'OSCryptoCatcherTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_OSCryptoCatcherTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'digests'
      classname: 'DigesterTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_DigesterTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'source_licenses'
      classname: 'LicenseCheckTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_LicenseCheckTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'binary_data'
      classname: 'BinwalkTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BinwalkTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'metadata'
      classname: 'MercatorTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_MercatorTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'code_metrics'
      classname: 'CodeMetricsTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CodeMetricsTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'languages'
      classname: 'LinguistTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_LinguistTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'dependency_snapshot'
      classname: 'DependencySnapshotTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_DependencySnapshotTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'FinalizeTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_FinalizeTask_v0'
      storage: 'BayesianPostgres'
      storage_readonly: true
    - name: 'FinalizeTaskError'
      # FinalizeTaskError is in fact alias for FinalizeTask, the implementation is shared, but FinalizeTaskError raises
      # an exception at the end so we recursively propagate flow error to parent flows
      classname: 'FinalizeTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_FinalizeTaskError_v0'
      storage: 'BayesianPostgres'
      storage_readonly: true
    - name: 'PackageFinalizeTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageFinalizeTask_v0'
      storage: 'PackagePostgres'
      storage_readonly: true
    - name: 'PackageFinalizeTaskError'
      # See 'FinalizeTaskError' notes for more info
      classname: 'PackageFinalizeTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageFinalizeTaskError_v0'
      storage: 'PackagePostgres'
      storage_readonly: true
    - name: 'GraphAggregatorTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphAggregatorTask_v0'
      storage: 'BayesianPostgres'
    - name: 'stack_aggregator'
      classname: 'StackAggregatorTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_StackAggregatorTask_v0'
      storage: 'BayesianPostgres'
    - name: 'stack_aggregator_v2'
      classname: 'StackAggregatorV2Task'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_StackAggregatorV2Task_v0'
      storage: 'BayesianPostgres'
    - name: 'recommendation'
      classname: 'RecommendationTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_RecommendationTask_v0'
      storage: 'BayesianPostgres'
    - name: 'recommendation_v2'
      classname: 'RecommendationV2Task'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_RecommendationV2Task_v0'
      storage: 'BayesianPostgres'
    - name: 'InitAnalysisFlow'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitAnalysisFlow_v0'
      storage: 'BayesianPostgres'
      #selective_run_function:
      #  name: 'selective_run_function'
      #  import: 'f8a_worker.dispatcher.selective'
    - name: 'ResultCollector'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_ResultCollector_v0'
    - name: 'PackageResultCollector'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageResultCollector_v0'
    - name: 'BigQueryTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BigQueryTask_v0'
    - name: 'CVEDBSyncTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CVEDBSyncTask_v0'
      storage: 'BayesianPostgres'
    - name: 'ManifestKeeperTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_ManifestKeeperTask_v0'
      storage: 'S3Manifests'
    - name: 'GraphImporterTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphImporterTask_v0'
      storage: 'BayesianPostgres'
    - name: 'PackageGraphImporterTask'
      classname: 'GraphImporterTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphImporterTask_v0'
      storage: 'PackagePostgres'
    - name: 'GraphSyncTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphSyncTask_v0'
    - name: 'GitReadmeCollectorTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GitReadmeCollector_v0'
      storage: 'S3Readme'
    - name: 'InitPackageFlow'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitPackageFlow_v0'
      storage: 'PackagePostgres'
    - name: 'GitHubManifestMetadataResultCollector'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GitHubManifestMetadataResultCollector_v0'
    - name: 'InitGitHubManifestMetadata'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitGitHubManifestMetadata_v0'
      storage: 'BayesianPostgres'
    - name: 'gh_most_starred_github_details'
      classname: 'GithubTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GitHubManifestMetadataGithubTask_v0'
    - name: 'git_stats'
      classname: 'GitStats'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_git_stats_v0'
      storage: 'PackagePostgres'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'libraries_io'
      classname: 'LibrariesIoTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_libraries_io_v0'
      storage: 'PackagePostgres'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'BookkeeperTask'
      classname: 'BookkeeperTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BookkeeperTask_v0'
    - name: 'package_keywords_tagging'
      classname: 'PackageKeywordsTaggingTask'
      storage_task_name: 'keywords_tagging'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_package_keywords_tagging_v0'
      storage: 'PackagePostgres'
      selective_run_function:
        name: 'selective_run_function'
        import: 'f8a_worker.dispatcher.selective'
    - name: 'keywords_tagging'
      classname: 'KeywordsTaggingTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_keywords_tagging_v0'
      storage: 'BayesianPostgres'
    - name: 'RepositoryDescCollectorTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_RepositoryDescCollectorTask_v0'
      storage: 'S3RepositoryDescription'
    - name: 'KeywordsSummaryTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_KeywordsSummaryTask_tagging_v0'
      storage: 'S3KeywordsSummary'
    - name: 'GithubDependencyTreeTask'
      classname: 'GithubDependencyTreeTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GithubDependencyTreeTask_v0'
      storage: 'BayesianPostgres'
    - name: 'unknown_deps_fetcher'
      classname: 'UnknownDependencyFetcherTask'
      import: 'f8a_worker.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_UnknownDependencyFetcherTask_v0'
      storage: 'BayesianPostgres'

  flows:
    - 'osioAnalysisFlow'
    - 'bayesianFlow'
    - 'bayesianApiFlow'
    - 'bayesianPriorityFlow'
    - 'bayesianAnalysisFlow'
    - 'bigQueryFlow'
    - 'stackApiGraphFlow'
    - 'stackApiGraphV2Flow'
    - 'livenessFlow'
    - 'cveCheckFlow'
    - 'bayesianPackageFlow'
    - 'bayesianApiPackageFlow'
    - 'bayesianPriorityPackageFlow'
    - 'bayesianPackageAnalysisFlow'
    - 'bayesianPackageTaggingFlow'
    - 'githubManifestMetadataFlow'
    - 'componentApiFlow'
    - 'keywordsSummaryFlow'
    - 'keywordsApiSummaryFlow'
    - 'keywordsPrioritySummaryFlow'

  storages:
    - name: 'BayesianPostgres'
      import: 'f8a_worker.storages'
      configuration: &postgresConfiguration
        # take configuration from environment variables
        connection_string: 'postgresql://{POSTGRESQL_USER}:{POSTGRESQL_PASSWORD}@{PGBOUNCER_SERVICE_HOST}:5432/{POSTGRESQL_DATABASE}?sslmode=disable'

    - name: 'PackagePostgres'
      import: 'f8a_worker.storages'
      configuration:
        <<: *postgresConfiguration

    - name: 'AmazonS3'
      import: 'f8a_worker.storages'
      configuration: &configurationS3
        aws_access_key_id: 'GNV3SAHAHA3DOT99GQII'
        aws_secret_access_key: 'ZmvMwngonaDK5ymlCd6ptaalDdJsCn3aSSxASPaZ'
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-unknown'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3Artifacts'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-artifacts'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3BigQuery'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-big-query'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3Data'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-data'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3PackageData'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-package-data'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3Manifests'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-manifests'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3MavenIndex'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-maven-index'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3VulnDB'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-vuln-db'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3Readme'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-readme'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3UserProfileStore'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-janus-json-data'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3GitHubManifestMetadata'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-github-manifest-metadata'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3CrowdSourceTags'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: 'dev-stack-analysis-clean-data'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3RepositoryDescription'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-repository-description'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3KeywordsSummary'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-keywords-summary'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3UserIntent'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: 'prod-manual-tags'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3ManualTagging'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: 'manual-github-tags'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3KronosAppend'
      import: 'f8a_worker.storages'
      classname: 'AmazonS3'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-stack-analysis-clean-data'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3TempArtifacts'
      import: 'f8a_worker.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-temp-artifacts'
        region_name: 'us-east-1'
        encryption: false
        versioned: false
        days_to_expire: 31

  global:
    trace:
      - sentry:
          dsn: '{SENTRY_DSN}'
      - function:
          import: 'f8a_worker.dispatcher.trace'
          name: 'trace_func'
    predicates_module: 'f8a_worker.dispatcher.predicates'
    migration_dir: '/usr/lib/python3.4/site-packages/f8a_worker/dispatcher/migration_dir'
