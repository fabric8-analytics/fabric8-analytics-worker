apiVersion: v1
kind: Template
labels:
  template: bayesian-worker
metadata:
  name: bayesian-worker
  annotations:
    description: bayesian-worker
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: bayesian-worker-${WORKER_ADMINISTRATION_REGION}${WORKER_NAME_SUFFIX}
    name: bayesian-worker-${WORKER_ADMINISTRATION_REGION}${WORKER_NAME_SUFFIX}
  spec:
    selector:
      service: bayesian-worker-${WORKER_ADMINISTRATION_REGION}${WORKER_NAME_SUFFIX}
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Retry
          execNewPod:
            containerName: bayesian-worker
            command: ["worker-pre-hook.sh"]
    template:
      metadata:
        labels:
          service: bayesian-worker-${WORKER_ADMINISTRATION_REGION}${WORKER_NAME_SUFFIX}
      spec:
        containers:
        - env:
          - name: OPENSHIFT_DEPLOYMENT
            value: "${OPENSHIFT_DEPLOYMENT}"
          - name: DEPLOYMENT_PREFIX
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: deployment-prefix
          - name: WORKER_ADMINISTRATION_REGION
            value: "${WORKER_ADMINISTRATION_REGION}"
          - name: WORKER_EXCLUDE_QUEUES
            value: "${WORKER_EXCLUDE_QUEUES}"
          - name: WORKER_INCLUDE_QUEUES
            value: "${WORKER_INCLUDE_QUEUES}"
          - name: WORKER_RUN_DB_MIGRATIONS
            value: "${WORKER_RUN_DB_MIGRATIONS}"
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: worker
                key: sentry_dsn
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: database
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: password
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: username
          - name: POSTGRESQL_INITIAL_DATABASE
            valueFrom:
              secretKeyRef:
                name: coreapi-postgres
                key: initial-database
          - name: AWS_SQS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: aws
                key: sqs-access-key-id
          - name: AUTH_SERVICE_HOST
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: auth-url
          - name: AWS_SQS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws
                key: sqs-secret-access-key
          - name: AWS_S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
               name: aws
               key: s3-access-key-id
          - name: AWS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: aws
                key: s3-secret-access-key
          - name: BAYESIAN_SYNC_S3
            valueFrom:
              secretKeyRef:
                name: aws
                key: sync-s3
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: worker
                key: github-token
          - name: LIBRARIES_IO_TOKEN
            valueFrom:
              secretKeyRef:
                name: worker
                key: libraries-io-token
          - name: PGBOUNCER_SERVICE_HOST
            value: bayesian-pgbouncer
          - name: PGM_SERVICE_HOST
            value: bayesian-kronos
          - name: MAX_COMPANION_PACKAGES
            value: "4"
          - name: MAX_ALTERNATE_PACKAGES
            value: "2"
          - name: OUTLIER_THRESHOLD
            value: "0.88"
          - name: UNKNOWN_PACKAGES_THRESHOLD
            value: "0.3"
          - name: LICENSE_SERVICE_HOST
            value: f8a-license-analysis
          - name: PGM_SERVICE_PORT
            value: "6006"
          - name: LICENSE_SERVICE_PORT
            value: "6162"
          - name: F8A_SERVER_SERVICE_HOST
            value: bayesian-api
          - name: AWS_S3_BUCKET_NAME
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: s3-bucket-for-analyses
          # this won't get used if running with SQS
          - name: RABBITMQ_SERVICE_SERVICE_HOST
            value: bayesian-broker
          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          name: bayesian-worker
          readinessProbe:
            exec:
              command: ["worker-readiness.sh"]
            initialDelaySeconds: 20
            periodSeconds: 60
            timeoutSeconds: 30
          livenessProbe:
            exec:
              command: ["worker-liveness.sh"]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            requests:
              memory: ${MEMORY_REQUEST}
              cpu: ${CPU_REQUEST}
            limits:
              memory: ${MEMORY_LIMIT}
              cpu: ${CPU_LIMIT}
        restartPolicy: Always
    test: false
    triggers:
    - type: ConfigChange
    replicas: ${{REPLICAS}}


parameters:
- description: Worker region for serving tasks - api, priority or ingestion
  displayName: Worker administration region
  required: true
  name: WORKER_ADMINISTRATION_REGION
  value: "api"

- description: Exclude queues so worker does not serve particular tasks
  displayName: Exclude queues
  required: false
  name: WORKER_EXCLUDE_QUEUES
  value: ""

- description: Let a worker listen on listed queues so worker serves only listed tasks
  displayName: Include queues
  required: false
  name: WORKER_INCLUDE_QUEUES
  value: ""

- description: A suffix for worker to distinguish different worker types based on configuration
  displayName: Worker name suffix
  required: false
  name: WORKER_NAME_SUFFIX
  value: ""

- description: Run database migrations on worker start up
  displayName: Run database migrations
  required: false
  name: WORKER_RUN_DB_MIGRATIONS
  value: ""

- description: Turn off tasks that are run on OpenShift instance and require internal services
  displayName: Openshift deployment
  required: true
  name: OPENSHIFT_DEPLOYMENT
  value: "1"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "quay.io"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "openshiftio/rhel-bayesian-cucos-worker"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"  # image-tag

- description: Number of deployment replicas
  displayName: Number of deployment replicas
  required: true
  name: REPLICAS
  value: "1"

- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "250m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "500m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "512Mi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "1536Mi"

- description: Sentry DSN
  displayName: Sentry DSN
  required: false
  name: SENTRY_DSN
  value: ""
