
---
  tasks:
    - name: 'blackduck'
      classname: 'BlackDuckLatentCollector'
      import: 'cucoslib.workers'
      max_retry: 3
      retry_countdown: 15
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BlackDuckLatentCollector_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'blackduck_executor'
      storage_readonly: true
      classname: 'BlackDuckTask'
      import: 'cucoslib.workers'
      max_retry: 5
      retry_countdown: 120
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BlackDuckTask_v0'
      ## only 1 task per 5 seconds
      #throttle:
      #   seconds: 5
    - name: 'redhat_downstream'
      classname: 'DownstreamUsageTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_DownstreamUsageTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'security_issues'
      classname: 'CVEcheckerTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CVEcheckerTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'github_details'
      classname: 'GithubTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'PackagePostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GithubTask_v0'
      ## only 1 task per 5 seconds
      #throttle:
      #   seconds: 5
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'static_analysis'
      classname: 'CsmockTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CsmockTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'crypto_algorithms'
      classname: 'OSCryptoCatcherTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_OSCryptoCatcherTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'digests'
      classname: 'DigesterTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_DigesterTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'source_licenses'
      classname: 'LicenseCheckTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_LicenseCheckTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'anitya'
      classname: 'AnityaTask'
      import: 'cucoslib.workers'
      max_retry: 0
      # Even AnityaTask does not store results in database, we provide database as a source
      storage: 'BayesianPostgres'
      storage_readonly: true
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_AnityaTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'binary_data'
      classname: 'BinwalkTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BinwalkTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'metadata'
      classname: 'MercatorTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_MercatorTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'code_metrics'
      classname: 'CodeMetricsTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CodeMetricsTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'languages'
      classname: 'LinguistTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_LinguistTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'dependency_snapshot'
      classname: 'DependencySnapshotTask'
      import: 'cucoslib.workers'
      max_retry: 0
      storage: 'BayesianPostgres'
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_DependencySnapshotTask_v0'
      selective_run_function:
        name: 'selective_run_function'
        import: 'cucoslib.dispatcher.selective'
    - name: 'FinalizeTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_FinalizeTask_v0'
      storage: 'BayesianPostgres'
      storage_readonly: true
    - name: 'FinalizeTaskError'
      # FinalizeTaskError is in fact alias for FinalizeTask, the implementation is shared, but FinalizeTaskError raises
      # an exception at the end so we recursively propagate flow error to parent flows
      classname: 'FinalizeTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_FinalizeTaskError_v0'
      storage: 'BayesianPostgres'
      storage_readonly: true
    - name: 'PackageFinalizeTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageFinalizeTask_v0'
      storage: 'PackagePostgres'
      storage_readonly: true
    - name: 'PackageFinalizeTaskError'
      # See 'FinalizeTaskError' notes for more info
      classname: 'PackageFinalizeTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageFinalizeTaskError_v0'
      storage: 'PackagePostgres'
      storage_readonly: true
    - name: 'GraphAggregatorTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphAggregatorTask_v0'
      storage: 'BayesianPostgres'
    - name: 'stack_aggregator'
      classname: 'StackAggregatorTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_StackAggregatorTask_v0'
      storage: 'BayesianPostgres'
    - name: 'recommendation'
      classname: 'RecommendationTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_RecommendationTask_v0'
      storage: 'BayesianPostgres'
    - name: 'InitAnalysisFlow'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitAnalysisFlow_v0'
      storage: 'BayesianPostgres'
      #selective_run_function:
      #  name: 'selective_run_function'
      #  import: 'cucoslib.dispatcher.selective'
    - name: 'ResultCollector'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_ResultCollector_v0'
    - name: 'PackageResultCollector'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_PackageResultCollector_v0'
    - name: 'BigQueryTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_BigQueryTask_v0'
    - name: 'CVEDBSyncTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_CVEDBSyncTask_v0'
      storage: 'BayesianPostgres'
    - name: 'ManifestKeeperTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_ManifestKeeperTask_v0'
      storage: 'S3Manifests'
    - name: 'GraphImporterTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphImporterTask_v0'
    - name: 'GraphSyncTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GraphSyncTask_v0'
    - name: 'GitReadmeCollectorTask'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GitReadmeCollector_v0'
      storage: 'S3Readme'
    - name: 'InitPackageFlow'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitPackageFlow_v0'
      storage: 'PackagePostgres'
    - name: 'GitHubManifestMetadataResultCollector'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_GitHubManifestMetadataResultCollector_v0'
    - name: 'InitGitHubManifestMetadata'
      import: 'cucoslib.workers'
      max_retry: 0
      queue: '{DEPLOYMENT_PREFIX}_{WORKER_ADMINISTRATION_REGION}_InitGitHubManifestMetadata_v0'
      storage: 'BayesianPostgres'

  flows:
    - 'bayesianAnalysisFlow'
    - 'bayesianApiAnalysisFlow'
    - 'bayesianFlow'
    - 'bayesianApiFlow'
    - 'bigQueryFlow'
    - 'stackApiGraphFlow'
    - 'livenessFlow'
    - 'cveCheckFlow'
    - 'graphImportFlow'
    - 'graphApiImportFlow'
    - 'bayesianPackageFlow'
    - 'bayesianPackageAnalysisFlow'
    - 'githubManifestMetadataFlow'

  storages:
    - name: 'BayesianPostgres'
      import: 'cucoslib.storages'
      configuration: &postgresConfiguration
        # take configuration from environment variables
        connection_string: 'postgresql://{POSTGRESQL_USER}:{POSTGRESQL_PASSWORD}@{PGBOUNCER_SERVICE_HOST}:5432/{POSTGRESQL_DATABASE}?sslmode=disable'

    - name: 'PackagePostgres'
      import: 'cucoslib.storages'
      configuration:
        <<: *postgresConfiguration

    - name: 'AmazonS3'
      import: 'cucoslib.storages'
      configuration: &configurationS3
        aws_access_key_id: 'GNV3SAHAHA3DOT99GQII'
        aws_secret_access_key: 'ZmvMwngonaDK5ymlCd6ptaalDdJsCn3aSSxASPaZ'
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-unknown'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3Artifacts'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-artifacts'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3BigQuery'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-big-query'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3Data'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-data'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3PackageData'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-package-data'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3Manifests'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-manifests'
        region_name: 'us-east-1'
        encryption: 'aws:kms'
        versioned: true

    - name: 'S3MavenIndex'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-maven-index'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3OWASPDepCheck'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-owasp-dep-check'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3UserProfileStore'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: 'janus-json-data'
        region_name: 'us-east-1'
        encryption: false
        versioned: false

    - name: 'S3Readme'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-readme'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3Snyk'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-core-snyk'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

    - name: 'S3GitHubManifestMetadata'
      import: 'cucoslib.storages'
      configuration:
        <<: *configurationS3
        bucket_name: '{DEPLOYMENT_PREFIX}-bayesian-github-manifest-metadata'
        region_name: 'us-east-1'
        encryption: false
        versioned: true

  global:
    trace:
      import: 'cucoslib.dispatcher.trace'
      function: 'trace_func'
    predicates_module: 'cucoslib.dispatcher.predicates'
